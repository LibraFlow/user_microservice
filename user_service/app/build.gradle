/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

import com.github.spotbugs.snom.Effort
import com.github.spotbugs.snom.Confidence

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.spotbugs' version '6.0.7'
    // id 'org.owasp.dependencycheck' version '9.0.9'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter:3.2.3' 
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // PostgreSQL dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql:42.6.0'

    // Jakarta Validation API
    implementation 'jakarta.validation:jakarta.validation-api'

    // OWASP
    implementation 'org.owasp.encoder:encoder:1.2.3'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    // Mockito dependencies
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'backend2.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// SpotBugs configuration
spotbugs {
    toolVersion = '4.8.3'
    ignoreFailures = true
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        xml.required = true
        html.required = true
    }
}

// Dependency Check configuration
/*
dependencyCheck {
    format = 'HTML'
    failBuildOnCVSS = 0
    suppressionFile = 'dependency-check-suppressions.xml'
    analyzers {
        assemblyEnabled = false
    }
    // Use local data only
    data {
        directory = 'dependency-check-data'
    }
    // Disable automatic updates
    autoUpdate = false
}
*/