stages:
  - build
  - test
  # - deploy

variables:
  # Gradle-specific variables
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

# Cache Gradle dependencies to speed up builds
cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

build:
  stage: build
  image: gradle:jdk17 # Use the appropriate Gradle and JDK version for your project
  script:
    - cd user_service
    - gradle build
  artifacts:
    paths:
      - user_service/build/libs/*.jar

test:
  stage: test
  image: gradle:jdk17
  script:
    - cd user_service
    - gradle test
  dependencies:
    - build

# deploy:
#   stage: deploy
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - cd database
#     - docker-compose up -d
#     - cd ../user_service
#     - docker build -t user_service:latest .
#     - docker run -d --name user_service_app --network host user_service:latest
#   only:
#     - main # Deploy only when changes are pushed to the main branch
