# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SAST_DISABLE_DIND: "true"  # Disable Docker-in-Docker for Windows
  SAST_ANALYZER_IMAGES: "registry.gitlab.com/gitlab-org/security-products/analyzers"  # Use GitLab's analyzer images
cache:
  paths:
  - ".gradle/wrapper"
  - ".gradle/caches"
build:
  stage: build
  image: gradle:jdk17
  script:
  - cd user_service
  - gradle build
  artifacts:
    paths:
    - user_service/build/libs/*.jar
test:
  stage: test
  image: gradle:jdk17
  script:
  - cd user_service
  - gradle test
  dependencies:
  - build

include:
  - template: Security/SAST.gitlab-ci.yml

sast:
  stage: test
  script:
    # Install GitLab SAST CLI
    - $ProgressPreference = 'SilentlyContinue'
    - Invoke-WebRequest -Uri "https://gitlab.com/gitlab-org/security-products/analyzers/sast/-/raw/main/scripts/install.ps1" -OutFile "install.ps1"
    - .\install.ps1
    # Run SAST analysis
    - gitlab-sast run
  artifacts:
    reports:
      sast: gl-sast-report.json
    paths:
      - gl-sast-report.json
